/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frontend;

import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.KeyStroke;

/**
 *
 * @author User
 */
public class WegfinderFront extends javax.swing.JFrame {

    private GroundPlanPanel gpp;
    
    /**
     * Creates new form WegfinderFront
     */
    public WegfinderFront() {
        super("Raumnavigator");
        initComponents();
        
        gpp = new GroundPlanPanel(this.getContentPane(), 0);
        gpp.setSize(gpp.getStandardSideLength(),gpp.getStandardSideLength());
        
        this.getContentPane().add(gpp);
        
        this.setSize(gpp.getStandardSideLength() + 20, gpp.getStandardSideLength() + 39);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setVisible(true);
        
        // Open the search engine with 'S'
        JPanel panel = (JPanel) this.getContentPane();
        panel.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_S, 0), "opense");
        panel.getActionMap().put("opense", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                UserInterface.getUI().openSE();
            }
        });
    }
    
    /**
     * Returns the ground plan panel object
     */
    public GroundPlanPanel getGroundPlan() {
        return gpp;
    }
    
    //<editor-fold defaultstate="collapsed" desc="Ground Plan Operations">
    
    public void drawPath(String from, String to) {
        gpp.drawPath(from, to);
    }
    
    //</editor-fold>

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WegfinderFront().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
